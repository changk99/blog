{"_path":"/articles/css/bfcstackcascading","_dir":"css","_draft":false,"_partial":false,"_locale":"zh-Hans","_empty":false,"title":"BFC,层叠上下文,级联层","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"_1生成-bfcblock-formatting-context"},"children":[{"type":"text","value":"1、生成 BFC（Block Formatting Context)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"根元素或包含根元素的元素"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"float 的值不为 none"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"overflow 的值不为 visible 和 clip"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"display 的值为 inline-block、table-cell、table-caption"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"position 的值为 absolute 或 fixed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"匿名表格单元格元素(由 display 为 table、table-row、 table-row-group、table-header-group、table-footer-group、inline-table 元素匿名生成的单元格元素)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"display 值为 flow-root 的元素"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"contain 值为 layout、paint, content 或 strict 的元素"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"弹性元素(display 为 flex 或 inline-flex 元素的直接子元素),但是其本身不是 flex, grid 或 table 类型的元素"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"网格元素(display 为 grid 或 inline-grid 元素的直接子元素),但是其本身不是 flex, grid 或 table 类型的元素"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"多列容器(元素的 column-count 或 column-width 不为 auto，包括 column-count 为 1)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"column-span 为 all 的元素，即使该元素没有包裹在一个多列容器中"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"其中设置 display 为 flow-root 可以无副作用地触发 BFC"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"当一个元素触发了 BFC 外主要有以下的效果"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"元素可以包裹内部的浮动元素"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"和外部的浮动元素进行隔离"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"抑制外边距折叠"}]}]},{"type":"element","tag":"h2","props":{"id":"_2创建层叠上下文"},"children":[{"type":"text","value":"2、创建层叠上下文"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"根元素 (HTML)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"z-index 值不为 \"auto\" 的 absolute 和 relative 定位(absolute 和 relative 定位中如果 z-index 为 auto 那么不会形成自身的层叠上下文)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"position: fixed or stick(适用于所有移动浏览器，但不适用于较旧的桌面浏览器)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"一个 z-index 值不为 \"auto\" 的 flex 项目 (flex item)，即：父元素 display: flex|inline-flex"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"一个 z-index 值不为 \"auto\" 的 grid 项目 (grid item)，即：父元素 display: grid|inline-grid"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"opacity 属性值小于 1 的元素"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"mix-blend-mode 属性值不为 \"normal\" 的元素"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"filter 值不为 \"none\" 的元素"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"transform 属性值不为 \"none\" 的元素"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"backdrop-filter 不为 \"none\" 的元素"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"perspective 值不为 \"none\" 的元素"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"clip-path 的值不为 \"none\" 的元素"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"mask/mask-image/mask-border 不为 \"none\" 的元素"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"isolation 属性被设置为 \"isolate\" 的元素"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在 will-change 中指定了一个属性,而且该属性其非初始值会创建一个层叠上下文。例如 transform 的初始值(Initial value)为 none,非初始值会创建层叠上下文,因此 will-change: transform 就会创建层叠上下文"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"-webkit-overflow-scrolling 属性被设置 “touch”的元素 (控制元素在移动设备上是否使用滚动回弹效果,设置为 touch 时表明有滚动回弹效果)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"contain 值是 layout 或者是 paint,或者是包括他们的合成值,如 strict 和 content"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"offset-path 不为 \"none\" 的元素"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"其中设置 isolation: isolate 可以无副作用地创建层叠上下文"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"层叠上下文主要影响元素在互相堆叠时的显示顺序。如果出现堆叠顺序问题,可以考虑一下是否意外地创建了层叠上下文。而且需要注意层叠上下文是分层的,只有在同层下堆叠比较才有意义。"}]},{"type":"element","tag":"h2","props":{"id":"_3级联层顺序"},"children":[{"type":"text","value":"3、级联层顺序"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"没有设置 !important 的用户代理样式,第一个声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"没有设置 !important 的用户代理样式,最后一个声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"没有设置 !important 的用户代理样式,没有声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"没有设置 !important 的用户样式,第一个声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"没有设置 !important 的用户样式,最后一个声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"没有设置 !important 的用户样式,没有声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"没有设置 !important 的开发者样式,第一个声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"没有设置 !important 的开发者样式,最后一个声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"没有设置 !important 的开发者样式,没有声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"没有设置 !important 的内联样式"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"animations"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有设置 !important 的开发者样式,没有声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有设置 !important 的开发者样式,最后一个声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有设置 !important 的开发者样式,第一个声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有设置 !important 的内联样式"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有设置 !important 的用户样式,没有声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有设置 !important 的用户样式,最后一个声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有设置 !important 的用户样式,第一个声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有设置 !important 的用户代理样式,没有声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有设置 !important 的用户代理样式,最后一个声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有设置 !important 的用户代理样式,第一个声明层"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"transitions"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"css(Cascading Style Sheets) 一般会翻译为层叠样式表,这里为了和上面的层叠上下文进行区分把 Cascading 翻译为级联。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n在进行 css 属性的优先级对比时,需要用到权重计算,会采用权重高的属性值,但是权重计算是有一个前提的,就是在同一个级联层内计算才有意义。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n上面的列表就是由低到高的顺序排列了级联层,例如 animations 的层总是比没有设置 !important 层高,所以使用 animations 动画可以覆盖掉内联设置的样式。而为什么 !important 设置的样式容易被采用,因为是提升到比较高的层上。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n在样式来源上可以分为用户代理样式,开发者样式,用户样式。像 div 标签的 display 属性,按照规范其初始值应该为 inline,但是使用时我们发现是 block 的,因为其 block 值是用户代理即浏览器设置的,这些设置就是用户代理样式。而开发者样式就是开发网站时写的样式。用户样式是浏览器允许用户上传的样式,不同的浏览器有不同的上传方法,这个知道即可。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n在新的级联规范中,支持了使用 @layer 来声明层。例如"}]},{"type":"element","tag":"code","props":{"code":".alert {\n  background-color: green;\n}\n@layer module, state\n@layer state {\n  .alert {\n    background-color: brown;\n  }\n}\n@layer module {\n  .alert {\n    background-color: yellow;\n  }\n}\n","language":"css","meta":null},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-b3da8e"},"children":[{"type":"text","value":".alert"}]},{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":" {\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-bfb99e"},"children":[{"type":"text","value":"background-color"}]},{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"class":"ct-e7efa0"},"children":[{"type":"text","value":"green"}]},{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":";\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":"}\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-535c20"},"children":[{"type":"text","value":"@layer"}]},{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":" module, state\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":"@layer state {\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-b3da8e"},"children":[{"type":"text","value":".alert"}]},{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":" {\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-bfb99e"},"children":[{"type":"text","value":"background-color"}]},{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"class":"ct-e7efa0"},"children":[{"type":"text","value":"brown"}]},{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":";\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":"  }\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":"}\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"class":"ct-535c20"},"children":[{"type":"text","value":"@layer"}]},{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":" module {\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-b3da8e"},"children":[{"type":"text","value":".alert"}]},{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":" {\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-bfb99e"},"children":[{"type":"text","value":"background-color"}]},{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"class":"ct-e7efa0"},"children":[{"type":"text","value":"yellow"}]},{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":";\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":"  }\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{"class":"ct-496755"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"其中 module 就是第一个声明层, state 是最后一个声明层,外部的没有使用 @layer 声明的为没有声明层。在没有添加 !important 的情况下,按照级联顺序,最终的结果是 green。如果都添加了 !important 那么最终的结果是 yellow。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n还有一点对于 animations,内部的样式声明添加 !important 是无效的。"}]},{"type":"element","tag":"h2","props":{"id":"参考链接"},"children":[{"type":"text","value":"参考链接"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Block_formatting_context","rel":["nofollow"]},"children":[{"type":"text","value":"BFC"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context","rel":["nofollow"]},"children":[{"type":"text","value":"层叠上下文"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/CSS/Cascade#Origin_of_CSS_declarations","rel":["nofollow"]},"children":[{"type":"text","value":"级联"}]}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-535c20{color:#C586C0}\n.ct-e7efa0{color:#CE9178}\n.ct-bfb99e{color:#9CDCFE}\n.ct-496755{color:#D4D4D4}\n.ct-b3da8e{color:#D7BA7D}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"_1生成-bfcblock-formatting-context","depth":2,"text":"1、生成 BFC（Block Formatting Context)"},{"id":"_2创建层叠上下文","depth":2,"text":"2、创建层叠上下文"},{"id":"_3级联层顺序","depth":2,"text":"3、级联层顺序"},{"id":"参考链接","depth":2,"text":"参考链接"}]}},"_type":"markdown","_id":"content:articles:css:BFCStackCascading.md","_source":"content","_file":"articles/css/BFCStackCascading.md","_extension":"md"}