{"_path":"/browser_plugins/modifyingwebdata/readme","_dir":"modifyingwebdata","_draft":false,"_partial":false,"_locale":"zh-Hans","_empty":false,"title":"使用说明","description":"","body":{"type":"root","children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"h3","props":{"id":"使用"},"children":[{"type":"text","value":"使用"}]}]},{"type":"element","tag":"code","props":{"code":"把[修改网页信息]目录下的的文件保存到本地,点击浏览器右上角的扩展程序 -> 扩展程序管理,勾选开发者模式,然后点击加载已经解压的扩展程序,选择包含之前下载文件的目录就可以了。\n","meta":null},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"把[修改网页信息]目录下的的文件保存到本地,点击浏览器右上角的扩展程序 -> 扩展程序管理,勾选开发者模式,然后点击加载已经解压的扩展程序,选择包含之前下载文件的目录就可以了。"}]}]}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"h3","props":{"id":"功能"},"children":[{"type":"text","value":"功能"}]}]},{"type":"element","tag":"code","props":{"code":"可以通过右键点击节点让节点处于可修改状态,修改信息后,信息会被保存,再次刷新时会让之前保存的信息替换原来的信息\n","meta":null},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"可以通过右键点击节点让节点处于可修改状态,修改信息后,信息会被保存,再次刷新时会让之前保存的信息替换原来的信息"}]}]}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"h3","props":{"id":"原理"},"children":[{"type":"text","value":"原理"}]}]},{"type":"element","tag":"code","props":{"code":"使用 XPath 来对节点进行定位,因此会依赖节点的渲染顺序\n\n使用 MutationObserver 对节点信息插入进行拦截,因为 MutationObserver 的监听回调的执行时机早于浏览器的渲染时机,所以替换时一般不会出现内容闪烁。而对于使用客户端渲染的页面,渲染顺序可能会有变化导致结构不确定,这个时候使用轮询的方式进行替换,会出现稍微的内容闪烁。\n","meta":null},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"使用 XPath 来对节点进行定位,因此会依赖节点的渲染顺序\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"使用 MutationObserver 对节点信息插入进行拦截,因为 MutationObserver 的监听回调的执行时机早于浏览器的渲染时机,所以替换时一般不会出现内容闪烁。而对于使用客户端渲染的页面,渲染顺序可能会有变化导致结构不确定,这个时候使用轮询的方式进行替换,会出现稍微的内容闪烁。"}]}]}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"h3","props":{"id":"配置"},"children":[{"type":"text","value":"配置"}]}]},{"type":"element","tag":"code","props":{"code":"点击扩展图标,可以对扩展进行配置\n\n启动切换: 禁止后,节点不能进入可修改状态,但是之前已经处于可修改状态的节点依然可以修改,再次刷新后数据依然会被覆盖,如果希望数据不会被覆盖,可以在扩展程序管理中暂时禁用该扩展\n\nurl 设置: 默认不设置会拦截所有的网页。支持通配符设置,例如 http?://*.baidu.com/*。支持正则设置,例如 https?://\\w*.baidu.com/\\w*\n\n清除缓存: 删除所有记录的网页修改数据\n","meta":null},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"点击扩展图标,可以对扩展进行配置\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"启动切换: 禁止后,节点不能进入可修改状态,但是之前已经处于可修改状态的节点依然可以修改,再次刷新后数据依然会被覆盖,如果希望数据不会被覆盖,可以在扩展程序管理中暂时禁用该扩展\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"url 设置: 默认不设置会拦截所有的网页。支持通配符设置,例如 http?://*.baidu.com/*。支持正则设置,例如 https?://\\w*.baidu.com/\\w*\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"清除缓存: 删除所有记录的网页修改数据"}]}]}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"h3","props":{"id":"限制"},"children":[{"type":"text","value":"限制"}]}]},{"type":"element","tag":"code","props":{"code":"该扩展使用的是 v3 协议,要求 chrome 的内核版本是 88 及以上。因为大部分浏览器都使用了 chrome 内核,因此可支持大部分浏览器。可以按 F12 打开浏览器控制台,输入 navigator.userAgent,假如输出是 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36',那么这个是 102 版本的,可以支持\n\n如果网页的文档结构是类似这样的\n<div>\n    hello world\n    <div>你好</div>\n</div>\nhello world 有兄弟节点,但是自身没有被元素节点包围,hello world 文本将不能被修改,因为如果可以修改,在修改过程中容易导致节点的结构发生更改,导致后续的替换失败。\n\n因为是使用 MutationObserver 配合 XPath 定位来拦截节点渲染,如果页面结构是不停变化的,例如滚动列表,对这些节点修改后的刷新替换会失效。\n\n替换目前是一次性的,如果找到目标节点就会进行替换,如果目标节点是先渲染节点结构,但是要等比较长的时间才渲染内容,会造成已替换内容被后出现数据所覆盖。\n","meta":null},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"该扩展使用的是 v3 协议,要求 chrome 的内核版本是 88 及以上。因为大部分浏览器都使用了 chrome 内核,因此可支持大部分浏览器。可以按 F12 打开浏览器控制台,输入 navigator.userAgent,假如输出是 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36',那么这个是 102 版本的,可以支持\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"如果网页的文档结构是类似这样的\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"<div>\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    hello world\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    <div>你好</div>\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"</div>\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"hello world 有兄弟节点,但是自身没有被元素节点包围,hello world 文本将不能被修改,因为如果可以修改,在修改过程中容易导致节点的结构发生更改,导致后续的替换失败。\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"因为是使用 MutationObserver 配合 XPath 定位来拦截节点渲染,如果页面结构是不停变化的,例如滚动列表,对这些节点修改后的刷新替换会失效。\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"替换目前是一次性的,如果找到目标节点就会进行替换,如果目标节点是先渲染节点结构,但是要等比较长的时间才渲染内容,会造成已替换内容被后出现数据所覆盖。"}]}]}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"h3","props":{"id":"开源地址"},"children":[{"type":"text","value":"开源地址"}]}]},{"type":"element","tag":"code","props":{"code":"https://gitee.com/changlishe/browser-plugins\n浏览器插件\n","meta":null},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"https://gitee.com/changlishe/browser-plugins\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"浏览器插件"}]}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"使用","depth":3,"text":"使用"},{"id":"功能","depth":3,"text":"功能"},{"id":"原理","depth":3,"text":"原理"},{"id":"配置","depth":3,"text":"配置"},{"id":"限制","depth":3,"text":"限制"},{"id":"开源地址","depth":3,"text":"开源地址"}]}},"_type":"markdown","_id":"content:browser_plugins:ModifyingWebData:readme.md","_source":"content","_file":"browser_plugins/ModifyingWebData/readme.md","_extension":"md"}